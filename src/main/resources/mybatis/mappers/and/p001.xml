<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="and.p001">
	<resultMap id="p001_d001Result01" type="AndP001AndOneVO">
		<result property="one_type" column="one_type"  /> <!-- 구분(먹기,하기,사기)-->
		<result property="one_id" column="one_id"  /> <!--글번호-->
		<result property="one_state" column="one_state"  />  <!-- 진행상태(진행중) -->
		<result property="one_category" column="one_category" /> <!-- 카테고리(치킨/피자) -->
		<result property="one_title" column="one_title" /> <!-- 제목 -->
		<result property="one_memberMax" column="one_memberMax" /> <!-- 모집인원 -->
		<result property="one_totalPrice" column="one_totalPrice" /> <!-- 총금액 -->
		<result property="one_price" column="one_price" /> <!-- 예상금액 -->		
		<result property="one_date" column="one_date" /> <!-- 실행날짜-->
		<result property="one_time" column="one_time" /> <!-- 등록시간-->
		<result property="one_hashTag" column="one_hashTag" /> 
		<result property="one_locate_Lat" column="one_locate_Lat" /> 
		<result property="one_locate_Lng" column="one_locate_Lng" /> 
		<result property="gc_name" column="gc_name" />
		<result property="gc_id" column="gc_id" />
		<result property="distance" column="distance" />
	</resultMap>
	<resultMap id="p001_d001Result02" type="java.util.HashMap" >
		<result property="m_locate_Lat" column="m_locate_Lat" /> 
		<result property="m_locate_Lng" column="m_locate_Lng" /> 
	</resultMap>
	
	<!-- one_date 실행날짜 one_time 등록시간 -->
	<!-- &분의일  최근등록된 같이먹기 -->
	<select id="selectRecentList" parameterType="map" resultType="AndP001AndOneVO">
<![CDATA[
       	select *
       	from (
		      	select ROW_NUMBER() OVER (
		      			]]>
		      			<if test ="flag == null">
		      				ORDER BY d.one_id DESC) ROWNUMER
		      			</if>
		      			<if test ="flag == 'distance'">
		      				ORDER BY distance) ROWNUMER
		      			</if>
		      			<if test ="flag == 'date'">
		      				ORDER BY a.one_date) ROWNUMER
		      			</if>
		      			<![CDATA[
		      			,a.one_type, d.one_id, b.gc_name as one_state, c.gc_name as one_category, a.one_title, a.one_memberMax, 
		       			CASE WHEN to_char(a.one_totalPrice/a.one_memberMax) = 0 then '비용없음' ELSE to_char(trunc(a.one_totalPrice/a.one_memberMax))||'원' END as one_price,
		       			substr(a.one_date,6,11) as one_date, replace(a.one_hashTag,',','#') as one_hashTag, RTRIM(TO_CHAR(d.distance, 'FM9990.9999'),'.') as distance, a.one_locate_Lat, a.one_locate_Lng,
		        		to_date(a.one_time,'yyyy-mm-dd HH24:mi:ss') as one_time, a.one_addr, substr(a.one_addr,1,6) as addrDetail, (select count(m_id) from one_member e where e.one_id = a.one_id and om_state not in ('10','40'))as one_member
				from and_one a, 
		       		 (select gc_name, gc_id, g_id
		              from common_code 
		              where g_id='017') b,
		             (select gc_name, gc_id, g_id
		              from common_code 
		              where g_id = #{g_id} ) c,
		              (select tmp.DISTANCE as distance, one_id
					   from ( 
    						select one_id, ROUND(DISTANCE_WGS84(#{m_locate_Lat}, #{m_locate_Lng}, one_locate_Lat, one_locate_Lng),2) as DISTANCE
    						from and_one
    						where (one_locate_Lat between #{m_locate_Lat}-0.059 and #{m_locate_Lat}+0.059)
   							and (one_locate_Lng between #{m_locate_Lng}-0.066 and #{m_locate_Lng}+0.066) ) TMP) d
			    where a.one_state = b.gc_id
				and a.one_category = c.gc_id
                and a.one_id = d.one_id
				and a.one_type= #{g_id}
				and a.one_id IN(SELECT one_id
                              FROM (
                                    SELECT ((TO_DATE(one_date,'YYYY-MM-DD hh24:mi:ss') - SYSDATE) * 24 * 60) AS RESULT, one_id
                                    FROM and_one
                                    )
                            WHERE RESULT > 0)
			)
			where ROWNUMER <=6
      ]]>            
	</select>
	<!-- 엔분의일 더보기 -->
	<select id="selectSearchMoreAndOne" parameterType="map" resultType="AndP001AndOneVO">
      <![CDATA[
       	select *
       	from (
		      	select ROW_NUMBER() OVER (
		      			]]>
		      			<if test ="flag == 'empty'">
		      				ORDER BY d.one_id DESC) ROWNUMER
		      			</if>
		      			<if test ="flag == 'distance'">
		      				ORDER BY distance) ROWNUMER
		      			</if>
		      			<if test ="flag == 'date'">
		      				ORDER BY a.one_date) ROWNUMER
		      			</if>
		      			<![CDATA[
		      			, a.one_type, d.one_id, b.gc_name as one_state, c.gc_name as one_category, a.one_title, a.one_memberMax, 
		       			CASE WHEN to_char(a.one_totalPrice/a.one_memberMax) = 0 then '비용없음' ELSE to_char(trunc(a.one_totalPrice/a.one_memberMax))||'원' END as one_price,
		       			substr(a.one_date,6,11) as one_date, replace(a.one_hashTag,',','#') as one_hashTag, RTRIM(TO_CHAR(d.distance, 'FM9990.9999'),'.') as distance, a.one_locate_Lat, a.one_locate_Lng,
		        		to_date(a.one_time,'yyyy-mm-dd HH24:mi:ss') as one_time, a.one_addr, substr(a.one_addr,1,6) as addrDetail, (select count(m_id) from one_member e where e.one_id = a.one_id and om_state not in ('10','40'))as one_member
				from and_one a, 
		       		 (select gc_name, gc_id, g_id
		              from common_code 
		              where g_id='017') b,
		             (select gc_name, gc_id, g_id
		              from common_code 
		              where g_id = #{g_id} ) c,
		              (select tmp.DISTANCE as distance, one_id
					   from ( 
    						select one_id, ROUND(DISTANCE_WGS84(#{m_locate_Lat}, #{m_locate_Lng}, one_locate_Lat, one_locate_Lng),2) as DISTANCE
    						from and_one
    						where (one_locate_Lat between #{m_locate_Lat}-0.059 and #{m_locate_Lat}+0.059)
   							and (one_locate_Lng between #{m_locate_Lng}-0.066 and #{m_locate_Lng}+0.066) ) TMP) d
			    where a.one_state = b.gc_id
				and a.one_category = c.gc_id
                and a.one_id = d.one_id
				and a.one_type= #{g_id}
				and a.one_id IN(SELECT one_id
                              FROM (
                                    SELECT ((TO_DATE(one_date,'YYYY-MM-DD hh24:mi:ss') - SYSDATE) * 24 * 60) AS RESULT, one_id
                                    FROM and_one
                                    )
                            WHERE RESULT > 0)
			)
			WHERE ROWNUMER BETWEEN #{startIndex} AND #{endIndex}
      ]]>
	</select>
	
	<!-- 카테고리 이름 번호 -->
	<select id="selectCtg" parameterType="String" resultType="AndP001AndOneVO"> 
      <![CDATA[
      select gc_name, gc_id
	  from common_code
	  where g_id= #{g_id}
	  order by to_number(gc_id)
      ]]>
	</select>
	
	<!-- 카테고리별 검색 -->
	<select id="selectCtgList" parameterType="map" resultType="AndP001AndOneVO">
      <![CDATA[
		select *
       	from (
		      	select ROW_NUMBER() OVER (
		      			]]>
		      			<if test ="flag == null">
		      				ORDER BY d.one_id DESC) ROWNUMER
		      			</if>
		      			<if test ="flag == 'distance'">
		      				ORDER BY distance) ROWNUMER
		      			</if>
		      			<if test ="flag == 'date'">
		      				ORDER BY a.one_date) ROWNUMER
		      			</if>
		      			<![CDATA[
		      			,a.one_type, d.one_id, b.gc_name as one_state, c.gc_name as one_category, a.one_title, a.one_memberMax, 
		       			CASE WHEN to_char(a.one_totalPrice/a.one_memberMax) = 0 then '비용없음' ELSE to_char(trunc(a.one_totalPrice/a.one_memberMax))||'원' END as one_price,
		       			substr(a.one_date,6,11) as one_date, replace(a.one_hashTag,',','#') as one_hashTag, RTRIM(TO_CHAR(d.distance, 'FM9990.9999'),'.') as distance, a.one_locate_Lat, a.one_locate_Lng,
		        		to_date(a.one_time,'yyyy-mm-dd HH24:mi:ss') as one_time, a.one_addr, substr(a.one_addr,1,6) as addrDetail, (select count(m_id) from one_member e where e.one_id = a.one_id and om_state not in ('10','40'))as one_member
				from and_one a, 
		       		 (select gc_name, gc_id, g_id
		              from common_code 
		              where g_id='017') b,
		             (select gc_name, gc_id, g_id
		              from common_code 
		              where g_id = #{g_id} 
		              and gc_id= #{one_category}) c,
		              (select tmp.DISTANCE as distance, one_id
					   from ( 
    						select one_id, ROUND(DISTANCE_WGS84(#{m_locate_Lat}, #{m_locate_Lng}, one_locate_Lat, one_locate_Lng),2) as DISTANCE
    						from and_one
    						where (one_locate_Lat between #{m_locate_Lat}-0.059 and #{m_locate_Lat}+0.059)
   							and (one_locate_Lng between #{m_locate_Lng}-0.066 and #{m_locate_Lng}+0.066) ) TMP) d
			    where a.one_state = b.gc_id
				and a.one_category = c.gc_id
                and a.one_id = d.one_id
				and a.one_type= #{g_id}
				and a.one_category = #{one_category}
			)
			WHERE ROWNUMER BETWEEN #{startIndex} AND #{endIndex}
      ]]>
	</select>
	
	<!-- 전체검색 추후 지역추가해야함-->
	<select id="selectTotalSearchList" parameterType="map" resultType="AndP001AndOneVO">
	  	 <![CDATA[
			select *
       		from (
		      		select ROW_NUMBER() OVER (
		      			]]>
		      			<if test ="flag == null">
		      				ORDER BY d.one_id DESC) ROWNUMER
		      			</if>
		      			<if test ="flag == 'distance'">
		      				ORDER BY distance) ROWNUMER
		      			</if>
		      			<if test ="flag == 'date'">
		      				ORDER BY a.one_date) ROWNUMER
		      			</if>
		      			<![CDATA[
		      			,a.one_type, d.one_id, b.gc_name as one_state, c.gc_name as one_category, a.one_title, a.one_memberMax, 
		       			CASE WHEN to_char(a.one_totalPrice/a.one_memberMax) = 0 then '비용없음' ELSE to_char(trunc(a.one_totalPrice/a.one_memberMax))||'원' END as one_price,
		       			substr(a.one_date,6,11) as one_date, replace(a.one_hashTag,',','#') as one_hashTag, RTRIM(TO_CHAR(d.distance, 'FM9990.9999'),'.') as distance, a.one_locate_Lat, a.one_locate_Lng,
		        		to_date(a.one_time,'yyyy-mm-dd HH24:mi:ss') as one_time, a.one_addr, substr(a.one_addr,1,6) as addrDetail, (select count(m_id) from one_member e where e.one_id = a.one_id and om_state not in ('10','40'))as one_member
				from and_one a, 
		       		 (select gc_name, gc_id, g_id
		              from common_code 
		              where g_id='017') b,
		             (select gc_name, gc_id, g_id
		              from common_code 
		              where g_id = #{g_id} ) c,
		              (select tmp.DISTANCE as distance, one_id
					   from ( 
    						select one_id, ROUND(DISTANCE_WGS84(#{m_locate_Lat}, #{m_locate_Lng}, one_locate_Lat, one_locate_Lng),2) as DISTANCE
    						from and_one
    						where (one_locate_Lat between #{m_locate_Lat}-0.059 and #{m_locate_Lat}+0.059)
   							and (one_locate_Lng between #{m_locate_Lng}-0.066 and #{m_locate_Lng}+0.066) ) TMP) d
 				]]>
				<where>
				(one_category like '%' ||#{totalSearch}|| '%' or 
				   one_title like '%' ||#{totalSearch}|| '%' or 
				   one_hashTag like '%' ||#{totalSearch} || '%' or
				   one_addr like '%' ||#{totalSearch} || '%' )
			    and a.one_state = b.gc_id
				and a.one_category = c.gc_id
                and a.one_id = d.one_id
				and a.one_type= #{g_id}
				</where>
			)
			<![CDATA[
	  		WHERE ROWNUMER BETWEEN #{startIndex} AND #{endIndex}
	  	 	]]>
	</select>
	
	<!--회원주소 가져오기 -->
	<select id="selectMemLocate" parameterType="String" resultMap="p001_d001Result02">
		<![CDATA[
			select m_locate_Lat, m_locate_Lng
			from member
			where m_id = #{m_id}
		]]>
	</select>
	
	<!-- 글상세조회 -->
	<select id="selectAndOneDetail" parameterType="java.util.HashMap" resultType="AndP001AndOneVO">
	<![CDATA[
		select a.one_type, a.one_id, b.gc_name as one_state, c.gc_name as one_category, a.one_title, a.one_memberMax, 
       			CASE WHEN to_char(a.one_totalPrice/a.one_memberMax) = 0 then '비용없음' ELSE to_char(trunc(a.one_totalPrice/a.one_memberMax)) END as one_price,
       			a.one_totalPrice, substr(a.one_date,6,11) as one_date, one_date as forEditDate,  replace(a.one_hashTag,',','#') as one_hashTag, a.one_locate_Lat, a.one_locate_Lng, one_addr,
        		to_date(a.one_time,'yyyy-mm-dd HH24:mi:ss') as one_time , a.one_content, (select count(m_id) from one_member e where e.one_id = a.one_id and om_state not in ('10','40'))as one_member
		from and_one a, 
		     (select gc_name, gc_id, g_id
		      from common_code 
		      where g_id='017') b,
		     (select gc_name, gc_id, g_id
		      from common_code 
		      where g_id =  #{g_id} ) c
		where a.one_state = b.gc_id
		and a.one_category = c.gc_id
		and a.one_type=  #{g_id} 
		and one_id = #{one_id}
	]]>
	</select>
	
	<!-- 상세조회용 작성자/참가자조회(닉네임이랑 사진띄우기) -->
	<select id="selectOneMem" parameterType="String" resultType="AndOneMemberVO">
		<![CDATA[
			select b.m_nickname, b.m_img as userImg, a.om_leader, a.om_state, a.m_id
			from one_member a, member b
			where a.m_id = b.m_id
			and a.one_id = #{one_id}
		]]>
	</select>
	
	<!-- 로그인한 사람이 작성자인지 참가자인지 확인(버튼용) -->
	<select id="selectOmLeader" parameterType="java.util.HashMap" resultType="AndOneMemberVO">
		<![CDATA[
			select om_leader, om_state
			from one_member 
			where m_id = #{m_id}
			and one_id = #{one_id}
		]]>
	</select>
	
	<!-- 모집시간내에 결제완료/진행완료 안된 엔분의일 상태변경 -->
	<update id="updateAndOneState" >
		<![CDATA[
			 UPDATE and_one     
			 SET one_state = '40'    
			 WHERE one_id IN(                
    		 SELECT one_id
    		 FROM
    		 (
		        SELECT ((TO_DATE(one_date,'YYYY-MM-DD hh24:mi:ss') - (SELECT sysdate from dual)) * 24 * 60) AS RESULT, one_id
		        FROM and_one
		        WHERE one_state NOT IN ('20','30')
    		)
    		WHERE RESULT < 0)
    	]]>
	</update>
	
	<!-- 포인트 환불 List -->
	<select id="selectPointList" resultType="AndP001AndOneVO">
		<![CDATA[
			SELECT A.m_id, to_char(trunc(B.one_totalPrice/B.one_memberMax)) as one_price, A.one_id
			FROM one_member A , and_one b
			WHERE om_leader = '20'
			AND A.one_id = b.one_id
			AND A.one_id IN (SELECT one_id
                			 FROM and_one
                			 WHERE one_state = '40'
                			 AND one_refund = '0')
		]]>
	</select>
	
	<!-- refund 상태변경 -->
	<update id="updateAndOneRefund" >
		<![CDATA[
			UPDATE and_one     
			SET one_refund = '1'   
			WHERE one_id = #{one_id}        
		]]>
	</update>
	
	<!-- 포인트 지급 List -->
	<select id="selectPayList" resultType="AndP001AndOneVO">
		<![CDATA[
			SELECT A.m_id, trunc(B.one_totalPrice/B.one_memberMax)*(B.one_memberMax-1) as one_price, A.one_id
			FROM one_member A, and_one b
			WHERE A.one_id = b.one_id
			AND A.om_leader = '10'
			AND A.one_id IN (SELECT one_id
                 			FROM and_one
                 			WHERE one_state = '20'
                 			AND one_pay = '0')
		]]>
	</select>
	
	<!-- pay 상태변경 -->
	<update id="updateAndOnePay" >
		<![CDATA[
			UPDATE and_one     
			SET one_pay = '1'   
			WHERE one_id = #{one_id}        
		]]>
	</update>
	
	<!-- 총AndOne 갯수 -->
	<select id="selectAndOneCnt" resultType="int">
		<![CDATA[
			SELECT COUNT(one_id)
			FROM and_one
		]]>
	</select>
	
	<!-- 카테고리 별 글 개수 -->
	<select id="selectAndOneCtgCnt" parameterType="java.util.HashMap" resultType="int">
		<![CDATA[
			SELECT COUNT(one_id)
			FROM and_one
			WHERE one_category = #{one_category}
			and (one_locate_Lat between #{m_locate_Lat}-0.059 and #{m_locate_Lat}+0.059)
			and (one_locate_Lng between #{m_locate_Lng}-0.066 and #{m_locate_Lng}+0.066)
			and one_type = #{g_id}
		]]>
	</select>
	<!-- 검색어 별 글 개수 -->
	<select id="selectAndOneTotalSearchCnt" parameterType="java.util.HashMap" resultType="int">
		<![CDATA[
			SELECT COUNT(one_id)
			FROM and_one
			WHERE (one_category like '%' ||#{totalSearch}|| '%' or 
				   one_title like '%' ||#{totalSearch}|| '%' or 
				   one_hashTag like '%' ||#{totalSearch} || '%' or
				   one_addr like '%' ||#{totalSearch} || '%' )
		   and (one_locate_Lat between #{m_locate_Lat}-0.059 and #{m_locate_Lat}+0.059)
	 	   and (one_locate_Lng between #{m_locate_Lng}-0.066 and #{m_locate_Lng}+0.066)
	 	   and one_type = #{g_id}
		]]>
	</select>
	
	<select id="">
	
	</select>
	
</mapper>