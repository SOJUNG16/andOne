<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="and.p002">
	<resultMap id="p001_d002Result01" type="java.util.HashMap">
		<result property="one_type" column="one_type"  /> <!-- 구분(먹기,하기,사기)-->
		<result property="one_id" column="one_id"  /> <!--글번호-->
		<result property="one_state" column="one_state"  />  <!-- 진행상태(진행중) -->
		<result property="one_category" column="one_category" /> <!-- 카테고리(치킨/피자) -->
		<result property="one_title" column="one_title" /> <!-- 제목 -->
		<result property="one_content" column="one_content" />
		<result property="one_locate_Lat" column="one_locate_Lat" />
		<result property="one_locate_Lng" column="one_locate_Lng" />
		<result property="one_memberMax" column="one_memberMax" /> <!-- 모집인원 -->
		<result property="one_totalPrice" column="one_totalPrice" /> <!-- 총금액 -->
		<result property="one_date" column="one_date" /> <!-- 실행날짜-->
		<result property="one_time" column="one_time" /> <!-- 등록시간-->
		<result property="one_hashTag" column="one_hashTag" /> 
		<result property="gc_name" column="gc_name" />
		<result property="gc_id" column="gc_id" />
	</resultMap>
	
	<!-- 엔분의일 글쓰기+수정 -->
	<insert id="insertAndOne" parameterType="java.util.HashMap">
      <![CDATA[
      MERGE INTO and_one
	  	USING dual
   	 	ON (one_id = #{one_id})
      	WHEN MATCHED THEN
      		UPDATE SET 
		     one_category = #{one_category}, one_title = #{one_title}, one_memberMax = #{one_memberMax}, 
		     one_totalPrice = #{one_totalPrice},one_date = #{one_date}, one_hashtag = #{one_hashTag}, 
		     one_locate_lat = #{one_locate_Lat}, one_locate_lng = #{one_locate_Lng}, one_content = #{one_content}, 
		     one_addr = #{one_addr}, one_editdate = to_char(sysdate,'yyyy-mm-dd HH24:mi:ss')
		WHEN NOT MATCHED THEN
			INSERT (one_type, one_id, one_state, one_category, one_title, one_memberMax, 
       			    one_totalPrice, one_date, one_hashtag, one_time, one_locate_lat, one_locate_lng,
       			    one_content, one_addr, one_editor, one_editdate )
			VALUES ( #{one_type}, lpad(andone_seq.NEXTVAL,6,'0'), '10', #{one_category}, #{one_title}, #{one_memberMax},
					#{one_totalPrice}, #{one_date}, #{one_hashTag}, to_char(sysdate,'yyyy-mm-dd HH24:mi:ss'), #{one_locate_Lat}, #{one_locate_Lng},
					#{one_content}, #{one_addr}, #{m_id}, to_char(sysdate,'yyyy-mm-dd HH24:mi:ss'))
      ]]>
	</insert>
	<!-- 엔분의일 작성자 등록 -->
	<insert id="insertOneMem" parameterType="java.util.HashMap">
	  <![CDATA[
	  	INSERT INTO one_member(one_type, one_id, m_id, om_leader, om_state, om_date, om_editor, om_editdate)
	  	VALUES (#{one_type}, (SELECT MAX(ONE_ID) FROM AND_ONE) ,#{m_id}, '10', '20', to_char(sysdate,'yyyy-mm-dd HH24:mi:ss'), 
	  			#{m_id}, to_char(sysdate,'yyyy-mm-dd HH24:mi:ss'))
	   ]]>
	</insert>
	
	<!-- 내가작성한 엔분의일 -->
	<select id="selectWroteAndOne" parameterType="java.util.HashMap" resultType="AndP002AndOneVO">
	  <![CDATA[
	  	SELECT *
		FROM
		(
		SELECT (ROW_NUMBER() OVER(ORDER BY om_date DESC))om_num, a.one_type, a.one_id, a.m_id, d.one_title, a.om_leader, a.om_state, a.om_date, 
			  			g_name, c.gc_name as one_state, e.m_nickname,
		    			CASE WHEN to_char(d.one_totalPrice/d.one_memberMax) = 0 then '비용없음' ELSE to_char(trunc(d.one_totalPrice/d.one_memberMax))||'원' END as one_price
		FROM one_member a, (SELECT g_name, g_id FROM code_group) b,(SELECT gc_name, gc_id, g_id FROM common_code WHERE g_id='017') c, 
		    		 and_one d, member e
		    
		WHERE a.one_type = b.g_id
		AND d.one_id = a.one_id
		AND d.one_state = c.gc_id
		AND a.m_id = e.m_id		
		AND a.m_id = #{m_id}
		AND a.om_leader = '10'  
		)
		WHERE om_num between #{startIndex} AND #{endIndex}
	   ]]>
	</select>
	
	<!-- 참가한 엔분의일 -->
	<select id="selectParticiateAndOne" parameterType="java.util.HashMap" resultType="AndP002AndOneVO">
	  <![CDATA[
	  	SELECT OM_NUM, ONE_TITLE, ONE_STATE, OM_DATE, G_NAME, ONE_PRICE, ONE_ID, M_ID, WRITER_NICKNAME, OM_STATE
		FROM
		(
   			SELECT (ROW_NUMBER() OVER(ORDER BY OM_DATE DESC))OM_NUM, A.ONE_TYPE, A.ONE_ID, A.M_ID, D.ONE_TITLE, A.OM_LEADER, G.GC_NAME AS OM_STATE, A.OM_DATE,
            G_NAME, C.GC_NAME AS ONE_STATE, E.M_NICKNAME,
            CASE WHEN TO_CHAR(D.ONE_TOTALPRICE/D.ONE_MEMBERMAX) = 0 THEN '비용없음' ELSE TO_CHAR(TRUNC(D.ONE_TOTALPRICE/D.ONE_MEMBERMAX))||'원' END AS ONE_PRICE
            ,WRITER_NICKNAME
    		FROM ONE_MEMBER A, (SELECT G_NAME, G_ID FROM CODE_GROUP) B,(SELECT GC_NAME, GC_ID, G_ID FROM COMMON_CODE WHERE G_ID='017') C,
         AND_ONE D, MEMBER E,
         (
            SELECT M_NICKNAME AS WRITER_NICKNAME,WRITER_ID,ONE_ID
            FROM
            (
               SELECT B.M_ID AS WRITER_ID, A.ONE_ID
               FROM AND_ONE A INNER JOIN ONE_MEMBER B ON A.ONE_ID = B.ONE_ID
               WHERE B.OM_LEADER = '10'
            )A INNER JOIN MEMBER B ON WRITER_ID = B.M_ID
         ) F, (SELECT GC_NAME, GC_ID, G_ID FROM COMMON_CODE WHERE G_ID='018') G
    	WHERE A.ONE_TYPE = B.G_ID
    	AND D.ONE_ID = A.ONE_ID
    	AND D.ONE_STATE = C.GC_ID
    	AND A.M_ID = E.M_ID
    	AND F.ONE_ID = A.ONE_ID
    	AND G.GC_ID = A.OM_STATE
    	AND A.M_ID = #{m_id}
    	AND A.OM_LEADER = '20'
		)
		WHERE OM_NUM BETWEEN #{startIndex} AND #{endIndex}
	   ]]>
	</select>
	
	<!-- 작성/참가 페이징 카운트 -->
	<select id="selectAndOneCnt" parameterType="String" resultType="int">
		<if test="flag=='participate'">
		<![CDATA[
			SELECT count(m_id) 
			FROM one_member 
			WHERE m_id like #{m_id}
			AND om_leader = '20' 
		]]>
		</if>
		<if test="flag=='write'">
		<![CDATA[
			SELECT count(m_id) 
			FROM one_member 
			WHERE m_id like #{m_id}
			AND om_leader = '10' 
		]]>
		</if>
	</select>
	
	<!-- 신청수락용 엔분의일 신청멤버 -->
	<select id="selectAndOneWaitMem" parameterType="String" resultType="AndOneMemberVO">
		<![CDATA[
			select a.m_id, a.one_id, b.m_nickname, a.om_date, b.m_img as userImg
			from one_member a , member b
			where om_leader = '20'
			and om_state = '10'
			and a.m_id = b.m_id 
			and one_id = #{one_id}
		]]>
	</select>
	
	<!-- 엔분의일 신청 수락-->
	<update id="updateOkOneMember" parameterType="java.util.HashMap">
		<![CDATA[
			update one_member
			set om_state = '20'
			where one_id = #{one_id}
			and m_id = #{m_id}
			and om_leader = '20'
		]]>
	</update>
	
	<!-- 엔분의일 신청 거절 -->
	<update id="updateDenyOneMember" parameterType="java.util.HashMap">
		<![CDATA[
			update one_member
			set om_state = '40'
			where one_id = #{one_id}
			and m_id = #{m_id}
			and om_leader = '20'
		]]>
	</update>
	
	<!-- 취소 시간계산 -->
	<select id="selectCancelTime" resultType="int" parameterType="String">
	<![CDATA[
		SELECT ((SELECT TO_DATE(one_date,'YYYY-MM-DD hh24:mi:ss') FROM and_one where one_id = #{one_id}) 
        -(SELECT SYSDATE FROM DUAL))*24*60 as one_time
		FROM DUAL
	]]>
	</select>
	<!-- 엔분의일 신청 취소 -->
	<delete id="updateCancelOneMember" parameterType="java.util.HashMap">
		<![CDATA[
			delete from one_member
			where one_id = #{one_id}
			and m_id = #{m_id}
			and om_leader = '20'
		]]>
	</delete>
	
	<!-- 엔분의일 글 삭제-->
	<delete id="deleteAndOne" parameterType="String">
		<![CDATA[
			{call
				declare
				 begin
					delete from and_one where one_id = #{one_id};
					delete from one_member where one_id = #{one_id};
				end
			}
		]]>
	</delete>
	
	<!-- 엔분의일 참가자 수(신청수락 안받고 일단 신청한사람만 있어도 수정불가) -->
	<select id="selectCntOneMem" resultType="int" parameterType="String">
	<![CDATA[
		select count(m_id)
		from one_member
		where one_id = #{one_id}
		and om_state in ('10','20')
	]]>
	</select>
	
	<!-- 엔분의일 글 인원 수 확인 -->
	<select id="selectAndOneMemberCnt" resultType="int" parameterType="String">
	<![CDATA[
		SELECT one_membermax
		FROM and_one
		WHERE one_id = #{one_id}
	]]>
	</select>
	
	<!-- 결제완료후 수락까지 받은 인원수 확인/완료까지 한 인원수 -->
	<select id="selectOneMemCnt" resultType="int" parameterType="String">
		<if test ="flag=='pay'">
			<![CDATA[
				SELECT COUNT(m_id)
				FROM one_member
				WHERE one_id = #{one_id}
				AND om_state = '20'
			]]>
		</if>
		<if test ="flag=='complete'">
			<![CDATA[
				SELECT COUNT(m_id)
				FROM one_member
				WHERE one_id = #{one_id}
				AND om_state = '30'
			]]>
		</if>
	</select>
	
	<!-- 엔분의일 진행상태 업테이트 10(모집중)->20(결제완료) -->
	<update id="updateOneState" parameterType="java.util.HashMap">
		<if test ="flag=='update'">
		<![CDATA[
			update and_one
			set one_state = '20'
			where one_id = #{one_id}
		]]>
		</if>
		<if test ="flag=='reupdate'">
		<![CDATA[
			update and_one
			set one_state = '10'
			where one_id = #{one_id}
		]]>
		</if>
		<if test ="flag=='complete'">
		<![CDATA[
			update and_one
			set one_state = '30'
			where one_id = #{one_id}
		]]>
		</if>
	</update>
	
	<!-- 엔분의일 진행상태 업테이트 20(모집중)->30(결제완료)  -->
	<update id="updateCompleteAndOne" parameterType="java.util.HashMap">
		<![CDATA[
			update one_member
			set om_state = '30'
			where one_id = #{one_id}
			and m_id = #{m_id}
		]]>
	</update>
	
	
</mapper>