<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   <mapper namespace="member.p001">
   <!-- Member 테이블 -->
   	<resultMap id="p001Result" type="memberP001_MemberVO">
		<result property="m_id" column="m_id"  />
		<result property="m_email" column="m_email"  />
		<result property="m_pwd" column="m_pwd"  />
		<result property="m_phonenumber" column="m_phonenumber"  />
		<result property="m_nickname" column="m_nickname"  />
		<result property="m_gender" column="m_gender"  />
		<result property="m_age" column="m_age"  />
		<result property="m_joindate" column="m_joindate"  />
		<result property="m_img" column="m_img" javaType="[B" jdbcType="BLOB" />
		<result property="m_editor" column="m_editor"  />
		<result property="m_editdate" column="m_editdate"  />  
		<result property="m_score" column="m_score"  />
	</resultMap>
	
	<resultMap id="clobMap" type="java.util.Map">
		<result property="m_img" column="m_img" javaType="[B" jdbcType="BLOB" />
	</resultMap>
	<!-- 어드민 조회용 -->
	<resultMap id="p001Result02" type="memberP001_d006VO">
		<result property="m_id" column="m_id" />
		<result property="m_phonenumber" column="m_phonenumber" />
		<result property="m_email" column="m_email" />
		<result property="m_gender" column="m_gender" />
		<result property="m_nickname" column="m_nickname" />
		<result property="m_age" column="m_age" />
		<result property="m_score" column="m_score" />
		<result property="reportCnt" column="reportCnt" />
		<result property="p_currentpoint" column="p_currentpoint" />
		<result property="qnaCnt" column="qnaCnt" />
		<result property="joinClubCnt" column="joinClubCnt" />
		<result property="reviewCnt" column="reviewCnt" />
		<result property="m_joinDate" column="m_joinDate" />
		<result property="m_locate" column="m_locate" />
		<result property="m_pwd" column="m_pwd" />
		<result property="m_editor" column="m_editor" />
		<result property="m_editdate" column="m_editdate" />
		<result property="searchKeyword" column="searchKeyword" />
		<result property="searchCondition" column="searchCondition" />
		
	</resultMap>
	<resultMap id="p001Result03" type="memberP001_d006ListVO">
		<collection property="list" column ="p_id" select="getPointList"/>		
	</resultMap>
   	<resultMap id="pointResult" type="pointP001VO">
		<result property="p_id" column="p_id"  />
		<result property="m_id" column="m_id"  />
		<result property="p_date" column="p_date"  />
		<result property="p_changepoint" column="p_changepoint"  />
		<result property="p_currentpoint" column="p_currentpoint"  />
		<result property="p_editor" column="p_editor"  />
		<result property="p_editdate" column="p_editdate"  />
		<result property="p_detail" column="p_detail"  />
	</resultMap>
	
	<!-- 마이페이지 맵 -->
	<resultMap type="java.util.HashMap" id="myPageMap">
		<result property="m_id" column="m_id"/>
		<result property="m_joindate" column="m_joindate"/>
		<result property="m_score" column="m_score"/>
		<result property="om_ready" column="om_ready"/>
		<result property="om_exe" column="om_exe"/>
		<result property="om_complete" column="om_complete"/>
		<result property="q_ready" column="q_ready"/>
		<result property="r_ready" column="r_ready"/>
	</resultMap>

	<!-- 어드민 영역 START -->
	<select id="selectMemberCnt" resultType="int">
	<![CDATA[
		SELECT COUNT(m_id)
		FROM member
		WHERE 1=1 
	]]>
		<if test="searchCondition=='EMAIL'">
		<![CDATA[
			AND M_EMAIL LIKE '%'||#{searchKeyword}||'%'
		]]>
		</if>
		<if test="searchCondition=='NICKNAME'">
		<![CDATA[
			AND M_NICKNAME LIKE '%'||#{searchKeyword}||'%'
		]]>
		</if>
	</select>
	
	<select id="detailMember" resultMap="p001Result02">
      <![CDATA[
         SELECT m_id,m_phonenumber,m_email,m_gender,m_nickname,m_age,m_score,
		(TRIM(TO_CHAR((SELECT p_currentpoint
			FROM ( SELECT p_currentpoint,
			ROW_NUMBER() OVER (ORDER BY p_id DESC) ROWNUMBER
			FROM point 
			WHERE m_id like #{m_id})
			WHERE ROWNUMBER = 1),'999,999,999'))) as p_currentpoint,
         (select count(m_id) 
		from report_member
		where m_id = #{m_id}) as reportCnt,
		(SELECT (SELECT COUNT(m_id) FROM qna WHERE m_id = '00000121') + (SELECT COUNT(m_id) FROM report WHERE m_id = '00000121')
		FROM DUAL) as qnaCnt,
		(select count(m_id)
		from c_member
		where m_id = #{m_id}) as joinClubCnt,
		(select count(m_id)
		from s_review
		where m_id = #{m_id}) as reviewCnt
         FROM member
         where m_id = #{m_id}
          ]]>
	</select>
	
	<select id="getPointList" resultMap="pointResult">
           <![CDATA[
			select p_id, p_date, p_detail,
            CASE WHEN SUBSTR(TRIM(TO_CHAR(p_changepoint,'999,999,999')),1,1)='-'
            THEN TRIM(TO_CHAR(p_changepoint,'999,999,999')) ELSE '+'||TRIM(TO_CHAR(p_changepoint,'999,999,999')) END AS p_changepoint
			FROM point
			where m_id like #{m_id}
			order by p_date desc
     	 ]]>
	</select>
	
	<select id="getMemberList" resultMap="p001Result02">
		<![CDATA[
			SELECT *
            FROM (SELECT M_ID, M_EMAIL, M_NICKNAME, M_PHONENUMBER, M_JOINDATE,
            ROW_NUMBER() OVER (ORDER BY m_id DESC) ROWNUMBER
			FROM MEMBER
            
		]]>
		<if test="searchCondition=='EMAIL'">
		<![CDATA[
			WHERE M_EMAIL LIKE '%'||#{searchKeyword}||'%'
		]]>
		</if>
		<if test="searchCondition=='NICKNAME'">
		<![CDATA[
			WHERE M_NICKNAME LIKE '%'||#{searchKeyword}||'%'
		]]>
		</if>
		<![CDATA[
			)
			WHERE ROWNUMBER BETWEEN #{startIndex} AND #{endIndex}
			ORDER BY M_ID DESC
		]]>
	</select>
	<!-- 어드민영역 END  -->
   	<select id="selectOverlapEmail" resultType="String" parameterType="String">
   		<![CDATA[
   			select m_email
			from member
			where m_email like #{email}
   		]]>
   	</select>
   	
   	<select id="selectOverlapPhone" resultType="String" parameterType="String">
 		<![CDATA[
   			select m_phonenumber
			from member
			where m_phonenumber like #{phone}
 		]]>
   	</select>
   	
   	<!-- 회원추가  -->
   	<insert id="insertMember" parameterType="memberP001_MemberVO">
		<![CDATA[
			INSERT INTO member(m_id, m_email, m_pwd, m_phonenumber, m_nickname, m_gender, m_age, m_joindate, m_locate_lat, m_locate_lng, m_editor, m_editdate)
    		VALUES(
	    		LPAD(MEMBER_ID_SEQ.NEXTVAL,8,'0'),#{m_email},#{m_pwd},#{m_phonenumber},
	    		#{m_nickname},#{m_gender},#{m_age}, TO_CHAR(sysdate,'yyyy-mm-dd hh24:mi:ss'),'0','0',
	    		LPAD(MEMBER_ID_SEQ.CURRVAL,8,'0'), TO_CHAR(sysdate,'yyyy-mm-dd hh24:mi:ss')
    		)
   		]]>
   	</insert>
   	
   	<!-- 회원정보수정  -->
   	<update id="updateMember" parameterType="memberP001_MemberVO">
		<![CDATA[
			UPDATE member
    		SET m_email = #{m_email}, m_pwd = #{m_pwd}, m_phonenumber = #{m_phonenumber}, m_nickname= #{m_nickname},
	    		m_gender = #{m_gender}, m_age = #{m_age},
	    		m_editor = #{m_id}, m_editdate = TO_CHAR(sysdate,'yyyy-mm-dd hh24:mi:ss')
    		WHERE m_id = #{m_id}
   		]]>
   	</update>
   	
   	<!-- 이메일기준 회원조회 -->
 	<select id="selectMemberByEmail" resultMap="p001Result" parameterType="String">
   		<![CDATA[
	   		SELECT m_id, m_email, m_pwd, m_phonenumber, m_nickname, m_gender, m_age
	   		FROM member
	   		WHERE m_email like #{email}
   		]]>
   	</select>
   	
   	<!-- 아이디기준 회원조회 -->
 	<select id="selectMemberById" resultMap="p001Result" parameterType="String">
   		<![CDATA[
	   		SELECT m_id, m_email, m_pwd, m_phonenumber, m_nickname, m_gender, m_age
	   		FROM member
	   		WHERE m_id like #{id}
   		]]>
   	</select>
   	
   	<!-- 비밀번호 찾기 사용시 -->
 	<select id="selectIdPwdByEmail" resultType="java.util.HashMap" parameterType="String">
   		<![CDATA[
	   		SELECT m_id, m_pwd
	   		FROM member
	   		WHERE m_email like #{email}
   		]]>
   	</select>
   	
   	<!-- 회원 비밀번호 조회 -->
 	<select id="selectPwdById" resultType="String" parameterType="String">
   		<![CDATA[
	   		SELECT m_pwd
	   		FROM member
	   		WHERE m_id like #{id}
   		]]>
   	</select>
   	
   	<!-- 주소정보 업데이트  -->
   	<update id="updateMemberLocate" parameterType="java.util.HashMap">
		<![CDATA[
			UPDATE member
    		SET m_locate_lat = #{m_locate_lat},
    			m_locate_lng = #{m_locate_lng},
	    		m_editor = #{m_id}, m_editdate = TO_CHAR(sysdate,'yyyy-mm-dd hh24:mi:ss')
    		WHERE m_id = #{m_id}
   		]]>
   	</update>
   	<!-- 비밀번호 업데이트  -->
   	<update id="updateMemberPwd" parameterType="java.util.Map">
		<![CDATA[
			UPDATE member
    		SET m_pwd = #{m_pwd},
	    		m_editor = #{m_id}, m_editdate = TO_CHAR(sysdate,'yyyy-mm-dd hh24:mi:ss')
    		WHERE m_id = #{m_id}
   		]]>
   	</update>
   	
   	<!-- 주소정보 조회 -->
   	<select id="selectMemberLocate" resultType="java.util.HashMap" parameterType="String">
 		<![CDATA[
   			select m_locate_lat, m_locate_lng
			from member
			where m_id like #{m_id}
 		]]>
   	</select>
   	
   	<!-- 프로필 이미지 업데이트 -->
   	<update id="saveImage" parameterType="java.util.Map">
		<![CDATA[
			UPDATE member
    		SET m_img = #{m_img},
	    		m_editor = #{m_id}, m_editdate = TO_CHAR(sysdate,'yyyy-mm-dd hh24:mi:ss')
    		WHERE m_id = #{m_id}
   		]]>
   	</update>
   	
   	<select id="getByteImage" resultMap="clobMap" parameterType="String">
	   	<![CDATA[
	   		SELECT m_img
	   		FROM member
	   		WHERE m_id = #{m_id}
	   	]]>
   	</select>
   	
   	<!-- 회원탈퇴(삭제) -->
   	<delete id="deleteMember" parameterType="String">
	   	<![CDATA[
	   		DELETE FROM member
	   		WHERE m_id = #{m_id}
	   	]]>
   	</delete>
   	
   	<!-- 마이페이지 영역 -->
   	<select id="seleteMyPageInfo" parameterType="String" resultMap="myPageMap">
   	<![CDATA[
	   	SELECT m_id, SUBSTR(m_joindate,1,10)m_joindate, m_score,
	    (SELECT DISTINCT COUNT(one_id) OVER(PARTITION BY m_id, om_state) FROM one_member WHERE om_state like '10' AND m_id like #{m_id})om_ready,
	    (SELECT DISTINCT COUNT(one_id) OVER(PARTITION BY m_id, om_state) FROM one_member WHERE om_state like '20' AND m_id like #{m_id})om_exe,
	    (SELECT DISTINCT COUNT(one_id) OVER(PARTITION BY m_id, om_state) FROM one_member WHERE om_state like '30' AND m_id like #{m_id})om_complete,
	    (SELECT DISTINCT COUNT(q_id) OVER(PARTITION BY m_id, q_state) FROM qna WHERE q_state like '10' AND m_id like #{m_id})q_ready,
	    (SELECT DISTINCT COUNT(r_id) OVER(PARTITION BY m_id, r_state) FROM report WHERE r_state like '10' AND m_id like #{m_id})r_ready
		FROM member
		WHERE m_id like #{m_id}
   	]]>
   	</select>
   	
   	
 	</mapper>