<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="shop.p001">

	<resultMap id="p001_d001Result" type="shopP001BMemberVO">
		<result property="bm_id" column="bm_id"  /> <!-- 구분(먹기,하기,사기)-->
		<result property="bm_pwd" column="bm_pwd"  /> <!--글번호-->
		<result property="bm_name" column="bm_name"  />  <!-- 진행상태(진행중) -->
		<result property="bm_email" column="bm_email" /> <!-- 카테고리(치킨/피자) -->
		<result property="bm_joindate" column="bm_joindate" /> <!-- 제목 -->
		<result property="bm_phoneNumber" column="bm_phoneNumber" /> <!-- 모집인원 -->
	</resultMap>
	
	<resultMap id="shopStatistics" type="shopP001StatisticsVO">
		<result property="six" column="SIX" />
		<result property="five" column="FIVE" />
		<result property="four" column="FOUR" />
		<result property="three" column="THREE" />
		<result property="two" column="TWO" />
		<result property="one" column="ONE" />
		<result property="recent" column="RECENT" />
	</resultMap>
	
	<!-- 아이디 중복체크 -->
	<select id="checkId" parameterType="String" resultType="int"> 
      <![CDATA[
     	select count(*) 
     	from b_member
     	where bm_id = #{bm_id}  		
      ]]>
	</select>
	<!-- 이메일 중복체크 -->
	<select id="checkEmail" parameterType="String" resultType="int"> 
      <![CDATA[
     	select count(*) 
     	from b_member
     	where bm_email = #{bm_email}  		
      ]]>
	</select>
	<!-- 회원가입 -->
	<insert id="insertBmember" parameterType="shopP001BMemberVO"> 
      <![CDATA[
     	insert into b_member (bm_id, bm_pwd, bm_name, bm_email, bm_joindate, bm_phoneNumber)
     	values (#{bm_id}, #{bm_pwd}, #{bm_name}, #{bm_email}, TO_CHAR(sysdate,'yyyy/mm/dd hh24:mi:ss'), #{bm_phoneNumber})
      ]]>
      </insert>
      <!-- 로그인-->
      <select id="loginCheck" parameterType="String" resultType="shopP001BMemberVO"> 
      <![CDATA[
     	select * 
     	from b_member
     	where bm_id = #{id}
      ]]>
	</select>
	<!--아이디찾기 -->
	  <select id="findId" parameterType="shopP001BMemberVO" resultType="String"> 
      <![CDATA[
     	SELECT NVL(max(bm_id),0) as bm_id
     	FROM b_member
     	WHERE bm_name = #{bm_name} 
     	AND bm_phoneNumber = #{bm_phoneNumber}
      ]]>
	</select>
	
	<select id="sixMonthScoreStatistics" parameterType="String" resultMap="shop.p001.shopStatistics">
		<![CDATA[
	     	SELECT
			(
			    SELECT DECODE(COUNT(M_ID),0,'0',SUM(SR_SCORE) / COUNT(S_ID)) AS SCORE
			    FROM S_REVIEW
			    WHERE S_ID = #{s_id}
			    AND SR_DATE < TO_CHAR(ADD_MONTHS(SYSDATE,-6))
			) AS SIX,
			(
			    SELECT DECODE(COUNT(M_ID),0,'0',SUM(SR_SCORE) / COUNT(S_ID)) AS SCORE
			    FROM S_REVIEW
			    WHERE S_ID = #{s_id}
			    AND SR_DATE < TO_CHAR(ADD_MONTHS(SYSDATE,-5))
			) AS FIVE,
			(
			    SELECT DECODE(COUNT(M_ID),0,'0',SUM(SR_SCORE) / COUNT(S_ID)) AS SCORE
			    FROM S_REVIEW
			    WHERE S_ID = #{s_id}
			    AND SR_DATE < TO_CHAR(ADD_MONTHS(SYSDATE,-4))
			) AS FOUR,
			(
			    SELECT DECODE(COUNT(M_ID),0,'0',SUM(SR_SCORE) / COUNT(S_ID)) AS SCORE
			    FROM S_REVIEW
			    WHERE S_ID = #{s_id}
			    AND SR_DATE < TO_CHAR(ADD_MONTHS(SYSDATE,-3))
			) AS THREE,
			(
			    SELECT DECODE(COUNT(M_ID),0,'0',SUM(SR_SCORE) / COUNT(S_ID)) AS SCORE
			    FROM S_REVIEW
			    WHERE S_ID = #{s_id}
			    AND SR_DATE < TO_CHAR(ADD_MONTHS(SYSDATE,-2))
			) AS TWO,
			(
			    SELECT DECODE(COUNT(M_ID),0,'0',SUM(SR_SCORE) / COUNT(S_ID)) AS SCORE
			    FROM S_REVIEW
			    WHERE S_ID = #{s_id}
			    AND SR_DATE < TO_CHAR(ADD_MONTHS(SYSDATE,-1))
			) AS ONE,
			(
			    SELECT DECODE(COUNT(M_ID),0,'0',SUM(SR_SCORE) / COUNT(S_ID)) AS SCORE
			    FROM S_REVIEW
			    WHERE S_ID = #{s_id}
			    AND SR_DATE < TO_CHAR(ADD_MONTHS(SYSDATE,0))
			) AS RECENT
			FROM DUAL
    	]]>
	</select>
	
	<select id="sixMonthReviewStatistics" parameterType="String" resultMap="shop.p001.shopStatistics">
		<![CDATA[
			SELECT
			(
			    SELECT COUNT(M_ID)
			    FROM S_REVIEW
			    WHERE S_ID = #{s_id}
			    AND SR_DATE < TO_CHAR(ADD_MONTHS(SYSDATE,-6))
			    AND SR_DATE > TO_CHAR(ADD_MONTHS(SYSDATE,-7))
			) AS SIX,
			(
			    SELECT COUNT(M_ID)
			    FROM S_REVIEW
			    WHERE S_ID = #{s_id}
			    AND SR_DATE < TO_CHAR(ADD_MONTHS(SYSDATE,-5))
			    AND SR_DATE > TO_CHAR(ADD_MONTHS(SYSDATE,-6))
			) AS FIVE,
			(
			    SELECT COUNT(M_ID)
			    FROM S_REVIEW
			    WHERE S_ID = #{s_id}
			    AND SR_DATE < TO_CHAR(ADD_MONTHS(SYSDATE,-4))
			    AND SR_DATE > TO_CHAR(ADD_MONTHS(SYSDATE,-5))
			) AS FOUR,
			(
			    SELECT COUNT(M_ID)
			    FROM S_REVIEW
			    WHERE S_ID = #{s_id}
			    AND SR_DATE < TO_CHAR(ADD_MONTHS(SYSDATE,-3))
			    AND SR_DATE > TO_CHAR(ADD_MONTHS(SYSDATE,-4))
			) AS THREE,
			(
			    SELECT COUNT(M_ID)
			    FROM S_REVIEW
			    WHERE S_ID = #{s_id}
			    AND SR_DATE < TO_CHAR(ADD_MONTHS(SYSDATE,-2))
			    AND SR_DATE > TO_CHAR(ADD_MONTHS(SYSDATE,-3))
			) AS TWO,
			(
			    SELECT COUNT(M_ID)
			    FROM S_REVIEW
			    WHERE S_ID = #{s_id}
			    AND SR_DATE < TO_CHAR(ADD_MONTHS(SYSDATE,-1))
			    AND SR_DATE > TO_CHAR(ADD_MONTHS(SYSDATE,-2))
			) AS ONE,
			(
			    SELECT COUNT(M_ID)
			    FROM S_REVIEW
			    WHERE S_ID = #{s_id}
			    AND SR_DATE < TO_CHAR(ADD_MONTHS(SYSDATE,0))
			    AND SR_DATE > TO_CHAR(ADD_MONTHS(SYSDATE,-1))
			) AS RECENT
			FROM DUAL
		]]>
	</select>
	
</mapper>
	